{
    "Collector": {
        "Taichung City Netflow": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Taichung City Netflow Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "https://tc.edu.tw/net/netflow/lkout/recent/30",
                "rate_limit": "3600"
            }
        },
        "HPFeeds": {
            "module": "intelmq.bots.collectors.hpfeeds.collector",
            "description": "HPFeeds Collector is the bot responsible to integrate HPFeeds solution with IntelMQ.",
            "parameters": {
                "broker_port": "20000",
                "broker_host": "127.0.0.1",
                "ident": "hpfeeds",
                "secret": "hpfeeds-secret",
                "rate_limit": "0"
            }
        },
        "Arbor": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Arbor Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://atlas-public.ec2.arbor.net/public/ssh_attackers",
                "rate_limit": "3600"
            }
        },
        "BruteForceBlocker": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "BruteForceBlocker Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://danger.rulez.sk/projects/bruteforceblocker/blist.php",
                "rate_limit": "3600"
            }
        },
        "Dshield": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Dshield Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://dshield.org/asdetailsascii.html?as=<INSERT ASNUM>",
                "rate_limit": "3600"
            }
        },
        "VXVault": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "VXVault Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://vxvault.siri-urz.net/URL_List.php",
                "rate_limit": "3600"
            }
        },
        "Malware Domain List": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Malware Domain List Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://www.malwaredomainlist.com/updatescsv.php",
                "rate_limit": "3600"
            }
        },
        "Dragon Research Group SSH": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Dragon Research Group SSH Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://dragonresearchgroup.org/insight/sshpwauth.txt",
                "rate_limit": "3600"
            }
        },
        "Dragon Research Group VNC": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "Dragon Research Group VNC Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "https://dragonresearchgroup.org/insight/vncprobe.txt",
                "rate_limit": "3600"
            }
        },
        "PhishTank": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "PhishTank Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://data.phishtank.com/data/< API KEY >/online-valid.csv",
                "rate_limit": "28800"
            }
        },
        "MalwarePatrol Dans Guardian": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "MalwarePatrol Dans Guardian Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "https://lists.malwarepatrol.net/cgi/getfile?receipt=< API KEY >&product=8&list=dansguardian",
                "rate_limit": "180000"
            }
        },
        "OpenBL": {
            "module": "intelmq.bots.collectors.url.collector",
            "description": "OpenBL Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "url": "http://www.openbl.org/lists/date_all.txt",
                "rate_limit": "43200"
            }
        },
        "ShadowServer Drone Report": {
            "module": "intelmq.bots.collectors.mail.mail-attach",
            "description": "ShadowServer Drone Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "rate_limit": "3600",
                "mail_host": "<host>",
                "mail_user": "<user>",
                "mail_password": "<password>",
                "mail_ssl": true,
                "folder": "Inbox.shadowserver",
                "subject_regex": "Shadowserver [^ ]+ Drone Report",
                "attach_regex": "csv.zip",
                "attach_unzip": true
            }
        },
        "ShadowServer Chargen Report": {
            "module": "intelmq.bots.collectors.mail.mail-url",
            "description": "ShadowServer Chargen Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "rate_limit": "3600",
                "mail_host": "<host>",
                "mail_user": "<user>",
                "mail_password": "<password>",
                "mail_ssl": true,
                "folder": "Inbox.shadowserver",
                "subject_regex": "Shadowserver [^ ]+ Chargen Report",
                "url_regex": "http://dl.shadowserver.org/[^ ]+"
            }
        },
        "CERT-EU Malicious URLs": {
            "module": "intelmq.bots.collectors.mail.mail-attach",
            "description": "CERT-EU Malicious URLs Collector is the bot responsible to get the report from source of information.",
            "parameters": {
                "rate_limit": "3600",
                "mail_host": "<host>",
                "mail_user": "<user>",
                "mail_password": "<password>",
                "mail_ssl": true,
                "folder": "Inbox.cert-eu",
                "subject_regex": "Malicious URLs",
                "attach_regex": "report.csv$",
                "attach_unzip": false
            }
        }
    },
    "Parser": {
        "Taichung City Netflow": {
            "module": "intelmq.bots.parsers.taichungcitynetflow.parser",
            "description": "Taichung City Netflow Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "HPFeeds": {
            "module": "intelmq.bots.parsers.hpfeeds.parser",
            "description": "HPFeeds Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Arbor": {
            "module": "intelmq.bots.parsers.arbor.parser",
            "description": "Arbor Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "BruteForceBlocker": {
            "module": "intelmq.bots.parsers.bruteforceblocker.parser",
            "description": "BruteForceBlocker Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Dshield": {
            "module": "intelmq.bots.parsers.dshield.parser",
            "description": "Dshield Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "VXVault": {
            "module": "intelmq.bots.parsers.vxvault.vxvault",
            "description": "VXVault Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Malware Domain List": {
            "module": "intelmq.bots.parsers.malwaredomainlist.malwaredomainlist",
            "description": "Malware Domain List Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Dragon Research Group SSH": {
            "module": "intelmq.bots.parsers.dragonresearchgroup.parser-ssh",
            "description": "Dragon Research Group SSH Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Dragon Research Group VNC": {
            "module": "intelmq.bots.parsers.dragonresearchgroup.parser-vnc",
            "description": "Dragon Research Group VNC Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "PhishTank": {
            "module": "intelmq.bots.parsers.phishtank.parser",
            "description": "PhishTank Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "MalwarePatrol Dans Guardian": {
            "module": "intelmq.bots.parsers.malwarepatrol.parser-dansguardian",
            "description": "MalwarePatrol Dans Guardian Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "OpenBL": {
            "module": "intelmq.bots.parsers.openbl.parser",
            "description": "OpenBL Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "ShadowServer Drone": {
            "module": "intelmq.bots.parsers.shadowserver.drone-parser",
            "description": "ShadowServer Drone Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "ShadowServer Chargen": {
            "module": "intelmq.bots.parsers.shadowserver.chargen-parser",
            "description": "ShadowServer Chargen Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "CERT-EU Malicious URLs": {
            "module": "intelmq.bots.parsers.certeu.malicious-urls-parser",
            "description": "CERT-EU Malicious URLs Parser is the bot responsible to parse the report and sanitize the information.",
            "parameters": {
                "rate_limit": "0"
            }
        }
    },
    "Expert": {
        "Cymru": {
            "module": "intelmq.bots.experts.cymru.cymru",
            "description": "Cymry (IP to ASN) is the bot responsible to add network information to the events (BGP, ASN, AS Name, Country, etc..).",
            "parameters": {
                "rate_limit": "0",
                "redis_cache_host": "127.0.0.1",
                "redis_cache_port": "6379",
                "redis_cache_db": "5",
                "redis_cache_ttl": "86400"
            }
        },
        "RIPENCC": {
            "module": "intelmq.bots.experts.ripencc.ripencc",
            "description": "RIPENCC is the bot resposible to get the correspondent abuse contact from source IP and destination IP of the events",
            "parameters": {
                "rate_limit": "0",
                "redis_cache_host": "127.0.0.1",
                "redis_cache_port": "6379",
                "redis_cache_db": "5",
                "redis_cache_ttl": "86400"
            }
        },
        "GeoIP": {
            "module": "intelmq.bots.experts.geoip.geoip",
            "description": "GeoIP (MaxMind) is the bot responsible to add geolocation information to the events (Country, City, Longitude, Latitude, etc..)",
            "parameters": {
                "rate_limit": "0",
                "database": "/opt/intelmq/var/lib/bots/geoip/GeoLite2-City.mmdb"
            }
        },
        "ASN Lookup": {
            "module": "intelmq.bots.experts.asnlookup.asnlookup",
            "description": "ASN Lookup is the bot responsible to add ASN and BGP information from Route Views Project to the events.",
            "parameters": {
                "rate_limit": "0",
                "database": "/opt/intelmq/var/lib/bots/asnlookup/ipasn.dat"
             }
        },
        "Deduplicator": {
            "module": "intelmq.bots.experts.deduplicator.deduplicator",
            "description": "Deduplicator is the bot responsible to detect and remove deduplicated events.",
            "parameters": {
                "rate_limit": "0",
                "redis_cache_host": "127.0.0.1",
                "redis_cache_port": "6379",
                "redis_cache_db": "6",
                "redis_cache_ttl": "86400"
            }
        },
        "Sanitizer": {
            "module": "intelmq.bots.experts.sanitizer.sanitizer",
            "description": "Sanitizer is the bot responsible to sanitize all events.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "Taxonomy": {
            "module": "intelmq.bots.experts.taxonomy.taxonomy",
            "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
            "parameters": {
                "rate_limit": "0"
            }
        },
        "CountryCodeFilter": {
            "module": "intelmq.bots.experts.countrycodefilter.countrycodefilter",
            "description": "Filters out events which do not match a specific country code. Needs: the cymru expert.",
            "parameters": {
                  "countrycode": "<country code>",
                  "rate_limit": "0"
            }
        }
    },
    "Output": {
        "File": {
            "module": "intelmq.bots.outputs.file.file",
            "description": "File is the bot responsible to send events to a file.",
            "parameters": {
                "file": "/opt/intelmq/var/lib/bots/file-output/events.txt",
                "rate_limit": "0"
            }
        },
        "LogCollector": {
            "module": "intelmq.bots.outputs.logcollector.logcollector",
            "description": "LogCollector is the bot responsible to send events to a logcollector (Splunk, ElasticSearch, etc..).",
            "parameters": {
                "rate_limit": "0",
                "ip": "<ip>",
                "port": "<port>"
            }
        },
        "MongoDB": {
            "module": "intelmq.bots.outputs.mongodb.mongodb",
            "description": "MongoDB is the bot responsible to send events to a MongoDB database.",
            "parameters": {
                "rate_limit": "0",
                "host": "<ip>",
                "port": "<port>",
                "database": "<database>",
                "collection": "<collection>"
            }
        },
        "PostgreSQL": {
            "module": "intelmq.bots.outputs.postgresql.postgresql",
            "description": "PostgreSQL is the bot responsible to send events to a PostgreSQL Database.",
            "parameters": {
                "rate_limit": "0",
                "host": "<ip>",
                "port": "<port>",
                "database": "intelmq-events",
                "user": "intelmq",
                "password": "<password>"
            }
        }
    }
}
