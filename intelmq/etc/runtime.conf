{
    "abusech-domain-parser": {
        "description": "Abuse.ch Domain Parser is the bot responsible to parse the report and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.abusech.parser_domain",
        "name": "Abuse.ch Domain",
        "parameters": {}
    },
    "abusech-feodo-domains-collector": {
        "description": "",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Abuse.ch Feodo Domains",
        "parameters": {
            "http_password": null,
            "http_url": "https://feodotracker.abuse.ch/blocklist/?download=domainblocklist",
            "http_username": null,
            "name": "Abuse.ch Feodo Domains",
            "provider": "Abuse.ch",
            "rate_limit": 129600,
            "ssl_client_certificate": null
        }
    },
    "cymru-whois-expert": {
        "description": "Cymry Whois (IP to ASN) is the bot responsible to add network information to the events (BGP, ASN, AS Name, Country, etc..).",
        "group": "Expert",
        "module": "intelmq.bots.experts.cymru_whois.expert",
        "name": "Cymru Whois",
        "parameters": {
            "redis_cache_db": 5,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert": {
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "127.0.0.1",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "file-output": {
        "description": "File is the bot responsible to send events to a file.",
        "group": "Output",
        "module": "intelmq.bots.outputs.file.output",
        "name": "File",
        "parameters": {
            "file": "/opt/intelmq/var/lib/bots/file-output/events.txt",
            "hierarchical_output": false,
            "single_key": null
        }
    },
    "gethostbyname-1-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "gethostbyname-2-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "malc0de-parser": {
        "description": "Malc0de Parser is the bot responsible to parse the IP Blacklist and either Windows Format or Bind Format reports and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.malc0de.parser",
        "name": "Malc0de",
        "parameters": {}
    },
    "malc0de-windows-format-collector": {
        "description": "",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Malc0de Windows Format",
        "parameters": {
            "http_password": null,
            "http_url": "https://malc0de.com/bl/BOOT",
            "http_username": null,
            "name": "Generic URL Fetcher is the bot responsible to get the report from an URL.",
            "provider": "Malc0de",
            "rate_limit": 10800,
            "ssl_client_certificate": null
        }
    },
    "malware-domain-list-collector": {
        "description": "Malware Domain List Collector is the bot responsible to get the report from source of information.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Malware Domain List",
        "parameters": {
            "http_url": "http://www.malwaredomainlist.com/updatescsv.php",
            "name": "Malware Domain List",
            "provider": "Malware Domain List",
            "rate_limit": 3600
        }
    },
    "malware-domain-list-parser": {
        "description": "Malware Domain List Parser is the bot responsible to parse the report and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.malwaredomainlist.parser",
        "name": "Malware Domain List",
        "parameters": {}
    },
    "spamhaus-drop-collector": {
        "description": "",
        "group": "Collector",
        "module": "intelmq.bots.collectors.http.collector_http",
        "name": "Spamhaus Drop",
        "parameters": {
            "http_password": null,
            "http_url": "https://www.spamhaus.org/drop/drop.txt",
            "http_username": null,
            "name": "Spamhaus Drop",
            "provider": "Spamhaus",
            "rate_limit": 3600,
            "ssl_client_certificate": null
        }
    },
    "spamhaus-drop-parser": {
        "description": "Spamhaus Drop Parser is the bot responsible to parse the DROP, EDROP, DROPv6, and ASN-DROP reports and sanitize the information.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.spamhaus.parser_drop",
        "name": "Spamhaus Drop",
        "parameters": {}
    },
    "taxonomy-expert": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {}
    },
    "url2fqdn-expert": {
        "description": "url2fqdn is the bot responsible to parsing the fqdn from the url.",
        "group": "Expert",
        "module": "intelmq.bots.experts.url2fqdn.expert",
        "name": "url2fqdn",
        "parameters": {
            "load_balance": true,
            "overwrite": false
        }
    }
}
