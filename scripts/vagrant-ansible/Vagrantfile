# -*- mode: ruby -*-
# vi: set ft=ruby :

name = "intelmq"
ip = "192.168.33.10"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Iterating over the list of hostnames and IPs above
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_url = "https://vagrantcloud.com/ubuntu/trusty64.box"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # machine.vm.network "forwarded_port", guest: 80, host: 8080

  # Set a hostname
  config.vm.hostname = "%s.example.org" % name
      
  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network :private_network, ip: ip
      
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  config.vm.provider "virtualbox" do |v|
    # Setting the name of the machine in the VirtualBox GUI
    v.name = name

    # Customise the amount of RAM avaliable to the machine:
    v.customize ["modifyvm", :id, "--memory", 1024]
  end

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "intelmq-bin/", "/usr/local/lib/python2.7/dist-packages/intelmq", :create => "true", :mount_options => [ "dmode=777", "fmode=777" ]
  config.vm.synced_folder "intelmq-conf/", "/opt/intelmq", :create => "true", :mount_options => [ "dmode=777", "fmode=777" ]
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "../ansible/vagrant.yml"
    ansible.extra_vars = { user: "vagrant", hosts: "intelmq" }
    ansible.limit = 'all'
    ansible.sudo = true
    # ansible.verbose = 'vvvv'
  end
end

